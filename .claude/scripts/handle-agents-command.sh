#!/bin/bash
# Handle /agents command to show v3.0 agents

# Check if the command matches /agents
if [[ "$CLAUDE_USER_PROMPT" =~ ^/?agents ]]; then
    echo "ðŸ“Š Claude Code Boilerplate v3.0 - Agent System"
    echo "============================================="
    echo ""
    echo "31 Total Agents Available:"
    echo ""
    echo "ðŸ”§ Technology Agents (7) - NEW in v3.0:"
    echo "  â€¢ supabase-specialist - Supabase, RLS, auth, real-time"
    echo "  â€¢ orm-specialist - Drizzle/Prisma schemas and migrations"
    echo "  â€¢ analytics-engineer - DBT, BigQuery, RudderStack"
    echo "  â€¢ ui-systems - Shadcn UI, Tailwind, Framer Motion"
    echo "  â€¢ privacy-compliance - GDPR, CCPA, consent management"
    echo "  â€¢ event-schema - Event architecture and schemas"
    echo "  â€¢ platform-deployment - Vercel, GCP, edge functions"
    echo ""
    echo "ðŸ‘¥ Role-Based Agents (24) - Core v2.8:"
    echo "  Development: frontend, backend, senior-engineer, tdd-engineer"
    echo "  Architecture: systems-architect, database-architect"
    echo "  Quality: qa, code-reviewer, security, performance"
    echo "  Specialized: form-builder, migration-specialist, refactoring-expert"
    echo "  Support: documentation-writer, analyzer, mentor, researcher"
    echo "  Management: pm-orchestrator, prd-writer, financial-analyst"
    echo ""
    echo "ðŸ’¡ Quick Commands:"
    echo "  /at <task> - Analyze task and suggest agents"
    echo "  /orch <task> - Orchestrate multiple agents"
    echo "  /agent-health - Check all agents status"
    echo "  /show-metrics - View performance metrics"
    echo ""
    echo "Use any agent directly or let task analysis recommend the best approach!"
fi
